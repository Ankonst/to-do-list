import { useState } from "react";
import Item from "./components/item.jsx";
import Button from "./components/button.jsx";
import CreateMenu from "./components/create_menu.jsx";

function App() {
  const [list, changeList] = useState([
    { task: "Do homework", isActive: true, id: 0 },
    { task: "Go outside", isActive: true, id: 1 },
    { task: "Watch a movie", isActive: true, id: 2 },
    { task: "Watch a serial", isActive: true, id: 3 },
  ]);
  const [currentID, changeID] = useState(4);
  const [isOpen, changeOpen] = useState(false);

  function toggleActive(id) {
    const newList = list.map((i) => {
      if (i.id === id) {
        return { ...i, isActive: !i.isActive };
      }
      return i;
    });
    changeList(newList);
  }

  function create(task) {
    changeOpen(false);
    console.log(task);
    changeList([...list, { task: task, isActive: true, id: currentID }]);
    changeID(currentID + 1);
  }

  function del(id) {
    const newList = list.filter((i) => (i.id !== id ? true : false));
    changeList(newList);
  }

  return (
    <>
      <div className="flex w-full min-h-screen bg-black justify-center items-center">
        <div className="bg-black w-2/3 max-md:w-5/6 max-sm:w-full h-2/3 p-5 rounded-md flex justify-center items-center flex-col gap-3">
          <svg
            className="w-1/3"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 335 220"
          >
            <g id="Layer_2" data-name="Layer 2">
              <g id="Layer_1-2" data-name="Layer 1">
                <path
                  className="cls-1"
                  d="M18.61,97.55q.77-37.1,1.52-74.19C12,24.41,8,25.07,0,26.58V2.18q30-.47,60.07-.48c-.13,7.64-.2,11.46-.33,19.1-8.34,0-12.49.13-20.72.69l-1.8,68.24A71.67,71.67,0,0,0,18.61,97.55Z"
                />
                <path
                  className="cls-1"
                  d="M99.77,101.9a98.69,98.69,0,0,1-14.3-11.28A105.77,105.77,0,0,1,73.08,77.28a54.51,54.51,0,0,1-8.24-15.23,51.26,51.26,0,0,1-2.72-17.86,51.37,51.37,0,0,1,3.16-17.47,46.34,46.34,0,0,1,8.08-13.91A37,37,0,0,1,85.22,3.49,33,33,0,0,1,100.07,0a27,27,0,0,1,14.8,4.12,35.13,35.13,0,0,1,11.51,12.61,71,71,0,0,1,7.3,20,105.68,105.68,0,0,1,2.22,25.08,95.15,95.15,0,0,1-3.3,24c-2,6.82-4.62,12.16-7.89,15.81s-7,5.42-11.19,5.43S104.8,105.07,99.77,101.9Zm.07-23a11.37,11.37,0,0,0,6.75,1.33,8.62,8.62,0,0,0,5.47-3.38,22.16,22.16,0,0,0,3.74-8,49.53,49.53,0,0,0,1.52-12.29,59.73,59.73,0,0,0-1.15-13.16A40.61,40.61,0,0,0,112.57,33,21.28,21.28,0,0,0,107,26a14.19,14.19,0,0,0-7-3,12.86,12.86,0,0,0-7.06,1,15.31,15.31,0,0,0-5.75,4.57,22.18,22.18,0,0,0-3.82,7.57A35.56,35.56,0,0,0,82,46.37a41.51,41.51,0,0,0,1.38,10.84,38,38,0,0,0,3.86,9.25A36.09,36.09,0,0,0,93,73.94,25.47,25.47,0,0,0,99.84,78.94Z"
                />
                <path
                  className="cls-1"
                  d="M143.37,87.69,144,62a136.56,136.56,0,0,0,28.69,2c-.12,10.61-.18,15.92-.31,26.52A101.7,101.7,0,0,1,143.37,87.69Z"
                />
                <path
                  className="cls-1"
                  d="M183.83,127.48q.48-62.49.95-125,15.87-.06,31.74-.21a32.2,32.2,0,0,1,19.4,6.17,39.23,39.23,0,0,1,12.91,15.93c3.07,6.67,4.56,14.53,4.44,24a76.2,76.2,0,0,1-5.14,26.84,107.46,107.46,0,0,1-13,24.28c-5.37,7.45-11.64,13.48-18.93,17A180.52,180.52,0,0,1,183.83,127.48Zm19.64-32.41c4.78-1.39,7.16-2.18,11.85-3.93a22.82,22.82,0,0,0,10-7.62,40.21,40.21,0,0,0,6.55-12.89,54.63,54.63,0,0,0,2.44-16.24c.05-6.07-.69-11-2.23-15a18.87,18.87,0,0,0-6.53-8.89,14.08,14.08,0,0,0-10.06-2.35c-4.71.53-7.07.78-11.8,1.21Z"
                />
                <path
                  className="cls-1"
                  d="M299.25,86.9a58.13,58.13,0,0,1-16.07-2.39,31.54,31.54,0,0,1-12.59-7,32,32,0,0,1-8-12.55,50.87,50.87,0,0,1-2.69-18A61.64,61.64,0,0,1,263,28a49.16,49.16,0,0,1,8-15.12,33.94,33.94,0,0,1,11.88-9.58A33.54,33.54,0,0,1,297.72,0a32.71,32.71,0,0,1,14.94,3.35,32.36,32.36,0,0,1,11.9,10.41,53.85,53.85,0,0,1,7.73,17A80.88,80.88,0,0,1,335,52.21a67.81,67.81,0,0,1-2.52,19.69c-1.65,5.33-3.92,9.18-6.85,11.61s-6.36,3.33-10.69,3.55S305.09,87,299.25,86.9Zm-.35-19.57a24.07,24.07,0,0,0,7.7-1.08,12.92,12.92,0,0,0,5.76-3.57A16.75,16.75,0,0,0,315.9,56,32.87,32.87,0,0,0,317,46a40.16,40.16,0,0,0-1.62-10.71,29.4,29.4,0,0,0-4-8.43,17.88,17.88,0,0,0-5.94-5.44,15.18,15.18,0,0,0-7.36-1.86,15.49,15.49,0,0,0-7.26,1.69,17.53,17.53,0,0,0-5.89,5A23.87,23.87,0,0,0,281,34.06a34.43,34.43,0,0,0-1.38,10.09A31.8,31.8,0,0,0,281,54a20.13,20.13,0,0,0,4.06,7.23,17.47,17.47,0,0,0,6.19,4.49A19.9,19.9,0,0,0,298.9,67.33Z"
                />
                <path
                  className="cls-1"
                  d="M0,218.18V127a141.74,141.74,0,0,1,28.55-18.23q.89,42.3,1.78,84.61A353.45,353.45,0,0,1,82.9,193c0,9.91,0,14.87,0,24.78Q41.41,217.55,0,218.18Z"
                />
                <path
                  className="cls-1"
                  d="M95.33,217.91q0-52.32,0-104.64c9.65,6,19.07,12.27,28.61,18.44q1.14,43.28,2.26,86.56Q110.76,218.09,95.33,217.91Z"
                />
                <path
                  className="cls-1"
                  d="M186.46,220a142.11,142.11,0,0,1-26.05-2.28c-8.32-1.55-15.12-3.63-20.29-6.36,3.81-6.5,5.72-9.57,9.62-15.61a70.42,70.42,0,0,0,17.33,6,75,75,0,0,0,19.35,1.68,49.17,49.17,0,0,0,10.45-1.36,13.66,13.66,0,0,0,5.63-2.71,5,5,0,0,0,1.79-3.74q0-2.66-3.48-3.76a42.74,42.74,0,0,0-9.08-1.56c-3.74-.33-7.82-.64-12.22-1A97.15,97.15,0,0,1,166,187.16a50.61,50.61,0,0,1-12.57-4.64,28,28,0,0,1-9.27-7.86,19.42,19.42,0,0,1-3.77-11.16,12.61,12.61,0,0,1,5-11.11c3.54-2.77,9.11-4.38,16.54-5.93,9.26-1.93,18.74-3.52,28-5.78,7.44-1.82,14.65-3.89,21.59-5.73s12.93-3.11,18.06-3.21c-3.56,9.74-5.38,14.33-9.05,23a83.27,83.27,0,0,0-15.46.38c-5.16.56-10.22,1.37-15.14,2.32A86.58,86.58,0,0,0,179.3,160a17,17,0,0,0-5.78,2.85,4.27,4.27,0,0,0-1.72,3.23c0,1.68,1.24,3,3.62,3.8a32.79,32.79,0,0,0,9.19,1.55c3.74.18,7.87.19,12.36,0s8.95-.33,13.33-.36a50.32,50.32,0,0,1,12.07,1.2,16.27,16.27,0,0,1,8.88,5.26c2.26,2.66,3.42,6.59,3.47,11.59A26.4,26.4,0,0,1,229.51,205c-3.54,4.86-8.9,8.63-16.07,11.26S197.28,220,186.46,220Z"
                />
                <path
                  className="cls-1"
                  d="M270.71,217.74q-.22-43.86-.44-87.71a124.38,124.38,0,0,0-33.86,12.91c-.09-8.69-.13-13-.21-21.72,33.28-21.37,66.44-28.12,98.8-2.52V141c-9.78-6.27-20.07-12.33-31.89-13.47q-.74,45.09-1.46,90.17Q286.17,217.65,270.71,217.74Z"
                />
              </g>
            </g>
          </svg>
          <div className="h-[30vh] overflow-y-scroll w-full scrollbar-hide my-5">
            <ul className="flex justify-center items-center self-center flex-col gap-3 w-full">
              {list.map((el) => (
                <Item
                  key={el.id}
                  id={el.id}
                  task={el.task}
                  isActive={el.isActive}
                  toggleActive={toggleActive}
                  del={del}
                />
              ))}
            </ul>
          </div>
          <div>
            <Button text="create task" func={() => changeOpen(true)} />
          </div>
        </div>
        <CreateMenu isOpen={isOpen} create={create} />
      </div>
    </>
  );
}

export default App;
